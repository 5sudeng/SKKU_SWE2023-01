import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;

public class DrawController extends JPanel { 
	
	private SimplePainterModel nowData;
	private ArrayList<SimplePainterModel> savedList;
	private DrawListener drawL;
	private SimplePainterView view;
	private boolean bDrag;
	
	public DrawController(SimplePainterView v) {
		view = v;
		
		setBackground(Color.white);
		
		drawL = new DrawListener();
		
		addMouseListener(drawL);
		addMouseMotionListener(drawL);
		
		nowData = new SimplePainterModel();
		savedList = new ArrayList<SimplePainterModel>();
		
		nowData.nDrawMode = Constants.NONE;
		bDrag = false;
	} // DrawController()
	
	public void setDrawMode(int mode) {
		nowData.nDrawMode = mode;
	}
	
	public void setSelectedColor(Color color) {
		nowData.selectedColor = color;
	}
	
	public void paintComponent(Graphics page) {
		super.paintComponent(page);
		
		if (bDrag) {
			switch(nowData.nDrawMode) {
				case Constants.LINE :
					page.setColor(nowData.selectedColor);
					Graphics2D page2 = (Graphics2D)page;
					page2.setStroke(new BasicStroke(nowData.nSize));
					page.drawLine(nowData.ptOne.x, nowData.ptOne.y, nowData.ptTwo.x, nowData.ptTwo.y);
					break;
				case Constants.RECT :
					break;
				case Constants.OVAL :
					break;
			} //switch
		} //if - //now data
		
		for (SimplePainterModel data: savedList) {
			switch(data.nDrawMode) {
				case Constants.DOT :
					page.setColor(data.selectedColor);
					page.fillOval(data.ptOne.x - data.nSize/2, data.ptOne.y - data.nSize/2, data.nSize, data.nSize);
					break;
				case Constants.LINE :
					page.setColor(data.selectedColor);
					Graphics2D page2 = (Graphics2D)page;
					page2.setStroke(new BasicStroke(data.nSize));
					page.drawLine(data.ptOne.x, data.ptOne.y, data.ptTwo.x, data.ptTwo.y);
					break;
				case Constants.RECT :
					break;
				case Constants.OVAL :
					break;
					
			} // switch
			
		} //for 
		
	} // paintComponent()
	
	private class DrawListener implements MouseListener, MouseMotionListener {

		@Override
		public void mouseClicked(MouseEvent e) {
			if (nowData.nDrawMode == Constants.DOT) {
				nowData.ptOne = e.getPoint();
				nowData.nSize = view.getTxtSize();
				savedList.add(new SimplePainterModel(nowData));
				repaint();
			} // if
		} // mouseClicked()
		
		@Override
		public void mousePressed(MouseEvent e) {
			if (nowData.nDrawMode == Constants.LINE) {
				bDrag = true;
				
				nowData.ptOne = e.getPoint();
				nowData.nSize = view.getTxtSize();
			} // if
			
		} // mousePressed()

		@Override
		public void mouseReleased(MouseEvent e) {
			if (nowData.nDrawMode == Constants.LINE) {
				bDrag = false;
				
				nowData.ptTwo = e.getPoint();
				savedList.add(new SimplePainterModel(nowData));
				repaint();
			} // if
			
		} // mouseReleased()
		
		@Override
		public void mouseDragged(MouseEvent e) {
			if (nowData.nDrawMode == Constants.LINE) {
				nowData.ptTwo = e.getPoint();
				repaint();
			} // if
		} // mouseDragged() 
		
		
		@Override
		public void mouseMoved(MouseEvent e) {}
		@Override
		public void mouseEntered(MouseEvent e) {}
		@Override
		public void mouseExited(MouseEvent e) {}
		
	}
	
} // DrawController class
